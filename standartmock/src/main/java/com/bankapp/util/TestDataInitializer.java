package com.bankapp.util;

import com.bankapp.model.Account;
import com.bankapp.model.Client;
import com.bankapp.repository.ClientRepository;
import com.bankapp.repository.AccountRepository;
import com.github.javafaker.Faker;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.util.Random;

@Component
public class TestDataInitializer implements CommandLineRunner {
    AccountRepository accountRepository;
    private final Faker faker = new Faker();
    private final Random random = new Random();
    private final RestTemplate restTemplate = new RestTemplate();

    public TestDataInitializer(AccountRepository accountRepository) {
        this.accountRepository = accountRepository;
    }

    @Override
    public void run(String... args) throws Exception {
        System.out.println("üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");

        for (int i = 0; i < 10; i++) {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
            String fullName = faker.name().fullName();
            String phone = "+79" + (random.nextInt(900000000) + 100000000);
            String username = "user" + (i + 1);
            String password = "pass" + (i + 1);

            //–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ AuthController –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–µ—Ä–≤–∏—Å–µ
            String regUrl = "http://localhost:8081/auth/register?fullName=" + fullName + "&phone=" + phone
                    + "&username=" + username + "&password=" + password;
            restTemplate.postForObject(regUrl, null, String.class);

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –±–∞–Ω–∫–∞
            Client client = new Client(fullName, phone, username, password);
            ClientRepository.save(client);
            System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç: " + fullName + " (" + phone + ") | –õ–æ–≥–∏–Ω: " + username
                    + ", –ü–∞—Ä–æ–ª—å: " + password);

            // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–µ—Ç–æ–≤ (–æ—Ç 1 –¥–æ 3)
            int accountCount = random.nextInt(3) + 1;
            for (int j = 0; j < accountCount; j++) {
                Account account = new Account();
                double initialBalance = random.nextInt(9000) + 1000; // –ë–∞–ª–∞–Ω—Å –æ—Ç 1000 –¥–æ 10000‚ÇΩ
                account.setBalance(initialBalance);
                client.getAccounts().add(account);
                accountRepository.save(account);
                System.out.println("  ‚ûï –°—á–µ—Ç: " + account.getAccountNumber() + " | –ö–∞—Ä—Ç–∞: "
                        + account.getCardNumber() + " | –ë–∞–ª–∞–Ω—Å: " + initialBalance + "‚ÇΩ");
            }
        }

        System.out.println("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }
}